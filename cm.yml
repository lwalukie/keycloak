apiVersion: v1
binaryData:
  cache-ispn-remote.xml: 
  infinispan-keycloak-database.xml: 
  log4j2.xml: PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPENvbmZpZ3VyYXRpb24gbmFtZT0iSW5maW5pc3BhblNlcnZlckNvbmZpZyIgbW9uaXRvckludGVydmFsPSI2MCIgc2h1dGRvd25Ib29rPSJkaXNhYmxlIj4KICA8UHJvcGVydGllcz4KICAgIDxQcm9wZXJ0eSBuYW1lPSJwYXRoIj4ke3N5czppbmZpbmlzcGFuLnNlcnZlci5sb2cucGF0aH08L1Byb3BlcnR5PgogICAgPFByb3BlcnR5IG5hbWU9ImFjY2Vzc0xvZ1BhdHRlcm4iPiVYe2FkZHJlc3N9ICVYe3VzZXJ9IFslZHtkZC9NTU0veXl5eTpISDptbTpzcyBafV0gJnF1b3Q7JVh7bWV0aG9kfSAlbSAlWHtwcm90b2NvbH0mcXVvdDsgJVh7c3RhdHVzfSAlWHtyZXF1ZXN0U2l6ZX0gJVh7cmVzcG9uc2VTaXplfSAlWHtkdXJhdGlvbn0lbjwvUHJvcGVydHk+CiAgPC9Qcm9wZXJ0aWVzPgogIDxBcHBlbmRlcnM+CiAgICA8IS0tIENvbG9yZWQgb3V0cHV0IG9uIHRoZSBjb25zb2xlIC0tPgogICAgPENvbnNvbGUgbmFtZT0iU1RET1VUIj4KICAgICAgPFBhdHRlcm5MYXlvdXQgcGF0dGVybj0iJWhpZ2hsaWdodHslZHt5eXl5LU1NLWRkIEhIOm1tOnNzLFNTU30gJS01cCAoJXQpIFslY10gJW0ldGhyb3dhYmxlfXtJTkZPPW5vcm1hbCwgREVCVUc9bm9ybWFsLCBUUkFDRT1ub3JtYWx9JW4iLz4KICAgIDwvQ29uc29sZT4KCiAgICA8Um9sbGluZ0ZpbGUgbmFtZT0iRklMRSIgY3JlYXRlT25EZW1hbmQ9InRydWUiCiAgICAgICAgICAgICAgICAgZmlsZU5hbWU9IiR7cGF0aH0vc2VydmVyLmxvZyIKICAgICAgICAgICAgICAgICBmaWxlUGF0dGVybj0iJHtwYXRofS9zZXJ2ZXIubG9nLiVke3l5eXktTU0tZGR9LSVpIj4KICAgICAgPFBvbGljaWVzPgogICAgICAgIDxPblN0YXJ0dXBUcmlnZ2VyaW5nUG9saWN5IC8+CiAgICAgICAgPFNpemVCYXNlZFRyaWdnZXJpbmdQb2xpY3kgc2l6ZT0iMTAwIE1CIiAvPgogICAgICAgIDxUaW1lQmFzZWRUcmlnZ2VyaW5nUG9saWN5IC8+CiAgICAgIDwvUG9saWNpZXM+CiAgICAgIDxQYXR0ZXJuTGF5b3V0IHBhdHRlcm49IiVke3l5eXktTU0tZGQgSEg6bW06c3MsU1NTfSAlLTVwICgldCkgWyVjXSAlbSV0aHJvd2FibGUlbiIvPgogICAgPC9Sb2xsaW5nRmlsZT4KCiAgICA8IS0tIFJvbGxpbmcgZmlsZSAtLT4KICAgIDxSb2xsaW5nRmlsZSBuYW1lPSJBVURJVC1GSUxFIiBjcmVhdGVPbkRlbWFuZD0idHJ1ZSIKICAgICAgICAgICAgICAgICBmaWxlTmFtZT0iJHtwYXRofS9hdWRpdC5sb2ciCiAgICAgICAgICAgICAgICAgZmlsZVBhdHRlcm49IiR7cGF0aH0vYXVkaXQubG9nLiVke3l5eXktTU0tZGR9LSVpIj4KICAgICAgPFBvbGljaWVzPgogICAgICAgIDxPblN0YXJ0dXBUcmlnZ2VyaW5nUG9saWN5IC8+CiAgICAgICAgPFNpemVCYXNlZFRyaWdnZXJpbmdQb2xpY3kgc2l6ZT0iMTAwIE1CIiAvPgogICAgICAgIDxUaW1lQmFzZWRUcmlnZ2VyaW5nUG9saWN5IC8+CiAgICAgIDwvUG9saWNpZXM+CiAgICAgIDxQYXR0ZXJuTGF5b3V0IHBhdHRlcm49IiVke3l5eXktTU0tZGQgSEg6bW06c3MsU1NTfSAlbSVuIi8+CiAgICA8L1JvbGxpbmdGaWxlPgoKICAgIDwhLS0gUm9sbGluZyBKU09OIGZpbGUsIGRpc2FibGVkIGJ5IGRlZmF1bHQgLS0+CiAgICA8Um9sbGluZ0ZpbGUgbmFtZT0iSlNPTi1GSUxFIiBjcmVhdGVPbkRlbWFuZD0idHJ1ZSIKICAgICAgICAgICAgICAgICBmaWxlTmFtZT0iJHtwYXRofS9zZXJ2ZXIubG9nLmpzb24iCiAgICAgICAgICAgICAgICAgZmlsZVBhdHRlcm49IiR7cGF0aH0vc2VydmVyLmxvZy5qc29uLiVke3l5eXktTU0tZGR9LSVpIj4KICAgICAgPFBvbGljaWVzPgogICAgICAgIDxPblN0YXJ0dXBUcmlnZ2VyaW5nUG9saWN5IC8+CiAgICAgICAgPFNpemVCYXNlZFRyaWdnZXJpbmdQb2xpY3kgc2l6ZT0iMTAwIE1CIiAvPgogICAgICAgIDxUaW1lQmFzZWRUcmlnZ2VyaW5nUG9saWN5IC8+CiAgICAgIDwvUG9saWNpZXM+CiAgICAgIDxKc29uTGF5b3V0IGNvbXBhY3Q9InRydWUiIGV2ZW50RW9sPSJ0cnVlIiBzdGFja3RyYWNlQXNTdHJpbmc9InRydWUiPgogICAgICAgIDxLZXlWYWx1ZVBhaXIga2V5PSJ0aW1lIiB2YWx1ZT0iJCR7ZGF0ZTp5eXl5LU1NLWRkJ1QnSEg6bW06c3MuU1NTWn0iIC8+CiAgICAgIDwvSnNvbkxheW91dD4KICAgIDwvUm9sbGluZ0ZpbGU+CgogICAgPCEtLSBSb2xsaW5nIEhvdFJvZCBhY2Nlc3MgbG9nLCBkaXNhYmxlZCBieSBkZWZhdWx0IC0tPgogICAgPFJvbGxpbmdGaWxlIG5hbWU9IkhSLUFDQ0VTUy1GSUxFIiBjcmVhdGVPbkRlbWFuZD0idHJ1ZSIKICAgICAgICAgICAgICAgICBmaWxlTmFtZT0iJHtwYXRofS9ob3Ryb2QtYWNjZXNzLmxvZyIKICAgICAgICAgICAgICAgICBmaWxlUGF0dGVybj0iJHtwYXRofS9ob3Ryb2QtYWNjZXNzLmxvZy4laSI+CiAgICAgIDxQb2xpY2llcz4KICAgICAgICA8U2l6ZUJhc2VkVHJpZ2dlcmluZ1BvbGljeSBzaXplPSIxMDAgTUIiIC8+CiAgICAgIDwvUG9saWNpZXM+CiAgICAgIDxQYXR0ZXJuTGF5b3V0IHBhdHRlcm49IiR7YWNjZXNzTG9nUGF0dGVybn0iLz4KICAgIDwvUm9sbGluZ0ZpbGU+CiAgICA8IS0tIFJvbGxpbmcgUkVTVCBhY2Nlc3MgbG9nLCBkaXNhYmxlZCBieSBkZWZhdWx0IC0tPgogICAgPFJvbGxpbmdGaWxlIG5hbWU9IlJFU1QtQUNDRVNTLUZJTEUiIGNyZWF0ZU9uRGVtYW5kPSJ0cnVlIgogICAgICAgICAgICAgICAgIGZpbGVOYW1lPSIke3BhdGh9L3Jlc3QtYWNjZXNzLmxvZyIKICAgICAgICAgICAgICAgICBmaWxlUGF0dGVybj0iJHtwYXRofS9yZXN0LWFjY2Vzcy5sb2cuJWkiPgogICAgICA8UG9saWNpZXM+CiAgICAgICAgPFNpemVCYXNlZFRyaWdnZXJpbmdQb2xpY3kgc2l6ZT0iMTAwIE1CIiAvPgogICAgICA8L1BvbGljaWVzPgogICAgICA8UGF0dGVybkxheW91dCBwYXR0ZXJuPSIke2FjY2Vzc0xvZ1BhdHRlcm59Ii8+CiAgICA8L1JvbGxpbmdGaWxlPgogIDwvQXBwZW5kZXJzPgoKICA8TG9nZ2Vycz4KICAgIDxSb290IGxldmVsPSJJTkZPIj4KICAgICAgPEFwcGVuZGVyUmVmIHJlZj0iU1RET1VUIiBsZXZlbD0iSU5GTyIvPgoKICAgICAgPCEtLSBVbmNvbW1lbnQganVzdCBvbmUgb2YgdGhlIHR3byBsaW5lcyBiZWxsb3cgdG8gdXNlIGFsdGVybmF0aXZlbHkgSlNPTiBsb2dnaW5nIG9yIHBsYWluLXRleHQgbG9nZ2luZyB0byBmaWxlLS0+CiAgICAgIDxBcHBlbmRlclJlZiByZWY9IkZJTEUiLz4KPCEtLSAgICAgIDxBcHBlbmRlclJlZiByZWY9IkpTT04tRklMRSIvPi0tPgogICAgPC9Sb290PgoKICAgIDwhLS0gWW91IGNhbiBzZXQgZGlmZmVyZW50IGxldmVscyBmb3IgY2F0ZWdvcmllcyBoZXJlIC0tPgogICAgPCEtLSBZb3UgY2FuIGFsc28gYXNzaWduIGRpZmZlcmVudCBhcHBlbmRlcnMgZm9yIGVhY2ggY2F0ZWdvcnksIGJ1dCB5b3UgZG9uJ3QgaGF2ZSB0byAtLT4KICAgIDxMb2dnZXIgbmFtZT0iY29tLmFyanVuYSIgbGV2ZWw9IldBUk4iLz4KICAgIDxMb2dnZXIgbmFtZT0ib3JnLmpib3NzLnRocmVhZHMiIGxldmVsPSJUUkFDRSIvPgoKICAgIDwhLS0gTm8gbmVlZCB0byB3YXJuIGFib3V0IG5vdCBiZWluZyBhYmxlIHRvIFRMUy9TU0wgaGFuZHNoYWtlIC0tPgogICAgPExvZ2dlciBuYW1lPSJpby5uZXR0eS5oYW5kbGVyLnNzbC5BcHBsaWNhdGlvblByb3RvY29sTmVnb3RpYXRpb25IYW5kbGVyIiBsZXZlbD0iRVJST1IiLz4KCiAgICA8IS0tIFNldCB0byBJTkZPIHRvIGVuYWJsZSBhdWRpdCBsb2dnaW5nIC0tPgogICAgPExvZ2dlciBuYW1lPSJvcmcuaW5maW5pc3Bhbi5BVURJVCIgYWRkaXRpdml0eT0iZmFsc2UiIGxldmVsPSJFUlJPUiI+CiAgICAgIDxBcHBlbmRlclJlZiByZWY9IkFVRElULUZJTEUiLz4KICAgIDwvTG9nZ2VyPgoKICAgIDwhLS0gU2V0IHRvIFRSQUNFIHRvIGVuYWJsZSBhY2Nlc3MgbG9nZ2luZyBmb3IgSG90IFJvZCByZXF1ZXN0cyAtLT4KICAgIDxMb2dnZXIgbmFtZT0ib3JnLmluZmluaXNwYW4uSE9UUk9EX0FDQ0VTU19MT0ciIGFkZGl0aXZpdHk9ImZhbHNlIiBsZXZlbD0iSU5GTyI+CiAgICAgIDxBcHBlbmRlclJlZiByZWY9IkhSLUFDQ0VTUy1GSUxFIi8+CiAgICA8L0xvZ2dlcj4KCiAgICA8IS0tIFNldCB0byBUUkFDRSB0byBlbmFibGUgYWNjZXNzIGxvZ2dpbmcgZm9yIFJFU1QgcmVxdWVzdHMgLS0+CiAgICA8TG9nZ2VyIG5hbWU9Im9yZy5pbmZpbmlzcGFuLlJFU1RfQUNDRVNTX0xPRyIgYWRkaXRpdml0eT0iZmFsc2UiIGxldmVsPSJJTkZPIj4KICAgICAgPEFwcGVuZGVyUmVmIHJlZj0iUkVTVC1BQ0NFU1MtRklMRSIvPgogICAgPC9Mb2dnZXI+CiAgPC9Mb2dnZXJzPgo8L0NvbmZpZ3VyYXRpb24+
  ispn-server.jks: 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
  ispn-truststore.jks: /u3+7QAAAAIAAAABAAAAAgAGc2VydmVyAAABh0bxKrkABVguNTA5AAAEnjCCBJowggKCoAMCAQICBGQqvEAwDQYJKoZIhvcNAQELBQAwDzENMAsGA1UEAwwESVNQTjAeFw0yMzA0MDMxMTQ1MDRaFw0yNDA0MDIxMTQ1MDRaMA8xDTALBgNVBAMMBElTUE4wggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDlr+NfEn+IoAS74+tgsf2SQpNk8TX8t89ChupGReaB/9c/qLcdh0OMFUO2Jm08x8pQrOlzNJOPYmmFOiFOiOrmTOEMuG+mE1KeBP6aF5ND398od6/kitCdJYtHMwuNIIVeL0saQSDxQ+6WexM4F10h7cEHWdB/Oe+SMk5D3b5KWJgAQyqIK4Vg0GlgnObdn0IfVz50s8ydUwSX7Od92X2SIdzkS0p9SGZ4Lw1pqUfAMrYGjQUDzOl4QpF5nY9Ge5VE8syOtugCMcQaBpCRXNVi3FXzrPdge1YJ8/ZHgcsz1EzIUvdKUQ8tLEgVeD13CCEbnxnaTJUX37bD+Koe+F0Tsll6dWnMqylM+3Mx+uzf3+x/xhg+6Zy7lkXSxS55otRD8GiUKgp5jAs9nvC3Xqta41gdMB1lehpdJJkWNWBRIJ6idMpwI2oWLvw889Z6c7vDqpqxIrq6vxEmo+9BDvtGPy1XTFvEMmW9+ImrnSP+Dd94jnvKzEBxTwrarnvHtpqcRwPcf4AhxSO6yY6jxB/OSYXeztovdL1TsrDil2e5imREohYr+PJyLDO2WCqSlnisyk5nt0PzGQ2eX346ScBEc/048Uwma/WoV0f5hMcac06nThOcJpMwda7kNxk0PLm5/Zsjfqt4k33bBCpC4FXFgMp5ZGoY6amxQq34lh9wFwIDAQABMA0GCSqGSIb3DQEBCwUAA4ICAQCYat4QhVAXjDTHKnA/IEBSbCBeP+nEQvP8clAGHzC2AWwfGt+nQVLkXj4MoB//xnkYnYMvbUBtLv25P/h9aYLjv4MdFsjVViQ0VNrxMFXkUuwTbROMVOOcoOynKhrvotjm0nzXFo2KEMAdQ6lqMEV0l8VxgKE0ghscxyaDW4Q36ct9qjilaQT4sdV7RqGJe1q+WuES3dmNvm32mlXm7FQCaJsuLm608mgb2KHrCO/qnMskFQaTTT82rDhHXe/eOeB8/yAJQnqEm8BQFkJw/QglztVh6lb1BZ+uA0o+LYT+b2jll8gibpCRGFfyfBgb4+hhNu3jYBAy1Ge+M5sdrkdx76mX6TZhaPcm+lf0RaH2SoZc7RftOLKZQfW19ZcHEJ2dZMFy4XeKqivDedXc0h0+50crmaVvHTydT+fAJ/Ix5gGwq19SWrAZQO80MvptYu7Wim9ZvsWS8FrvIBaBqpQTrCOAYQnxfpreYCPZ+WE8dcWsp9W5nzA3M8vndf42hzWmwYikgL/aAz6wylZjNsC01dji9TUM9a6rRmIvnIFbiRx98h/68uGIBJ4SFIyhm/21dHOTxGkOaWI/PJdU8/C9p4FP2dleIgxFd/SFFcxl3AD3ZfJlIBwqilNb/8A2h7e/QCLdsnSwc7GDP/u8kD4UOJS+ltrBx3jZQBskVfDmaM8ThgZA+97SBFxop/q7uyVikCF2
  common.sh: 
  users.properties: a2V5Y2xvYWs9cGFzc3dvcmQ=
immutable: false
kind: ConfigMap
metadata:
  name: kc-config
  namespace: keycloak
